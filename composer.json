{
    "name": "oeco-architectes/oeco",
    "description": "Oeco Architectes wrbsite",
    "keywords": [
        "oeco",
        "architecture",
        "website"
    ],
    "license": "proprietary",
    "type": "project",
    "require": {
        "php": "^7.2.0",
        "amercier/rectangular-mozaic": "^0.3.0",
        "devitek/yaml-configuration": "^3.1",
        "fideloper/proxy": "^4.0",
        "fzaninotto/faker": "^1.8",
        "graham-campbell/markdown": "^10.1",
        "laravel/framework": "5.7.*",
        "laravel/tinker": "^1.0",
        "lavary/laravel-menu": "^1.7"
    },
    "require-dev": {
        "dg/ftp-deployment": "^3.0",
        "filp/whoops": "^2.0",
        "laravel/dusk": "^4.0",
        "mockery/mockery": "^1.0",
        "nunomaduro/collision": "^2.0",
        "phpunit/phpunit": "^7.0",
        "squizlabs/php_codesniffer": "^3.3",
        "symfony/process": "^4.1"
    },
    "autoload": {
        "files": [
            "app/helpers.php"
        ],
        "classmap": [
            "database/seeds",
            "database/factories"
        ],
        "psr-4": {
            "App\\": "app/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": [
            ]
        }
    },
    "scripts": {
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate",
            "@php -r \"file_exists('public/favicon.ico') || copy('https://oeco-architectes.github.io/oeco-logo/oeco-favicon.ico', 'public/favicon.ico');\"",
            "@php -r \"file_exists('public/img/oeco-logo.svg') || copy('https://oeco-architectes.github.io/oeco-logo/oeco-logo.svg', 'public/img/oeco-logo.svg');\"",
            "@php -r \"file_exists('resources/fonts.tar.gz') || symlink('fonts', 'resources/fonts.tar.gz');\"",
            "@php -r \"file_exists('resources/fonts.tar') || (new PharData('resources/fonts.tar.gz'))->decompress();\"",
            "@php -r \"(new PharData('resources/fonts.tar'))->extractTo('public/fonts', null, true);\"",
            "npm install",
            "npm run development"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover"
        ],
        "post-install-cmd": [
            "touch database/database.sqlite"
        ],
        "start": [
            "@composer clear-cache",
            "@composer dump-autoload --apcu",
            "cat .composer-watch.txt",
            "@php artisan serve"
        ],
        "watch": [
            "npm run watch -- --colors"
        ],
        "build": [
            "npm run production -- --colors"
        ],
        "lint": [
            "npm run --silent lint",
            "phpcs --extensions=php --standard=phpcs.xml ."
        ],
        "test": [
            "@composer test:js",
            "@composer test:php",
            "@composer test:e2e"
        ],
        "test:php": [
            "cat .composer-phpunit.txt",
            "phpunit --colors=always $([ \"$COVERAGE\" = '' ] || echo '--coverage-html coverage/php') $([ \"$CI\" = '' ] || echo '--coverage-clover coverage/php/clover.xml')"
        ],
        "test:js": [
            "cat .composer-npm-test.txt",
            "npm run test:run"
        ],
        "test:e2e": [
            "cat .composer-dusk.txt",
            "@php artisan dusk"
        ],
        "deploy": [
            "deployment .deployment.php"
        ],
        "migrate": [
            "@php artisan down --no-interaction",
            "@php artisan cache:clear --no-interaction",
            "@php artisan config:cache --no-interaction",
            "@php artisan migrate --force --no-interaction",
            "@php artisan up --no-interaction"
        ],
        "optimize": [
            "@composer dump-autoload --optimize --classmap-authoritative"
        ]
    },
    "config": {
        "preferred-install": "dist",
        "process-timeout": 0,
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
