@import '../lib/lists';

/// Display a vertical list on mobile
/// @require {Function} vr
/// @require {Mixin} typi
.oe-mozaic {
    @include vertical-list;

    &__item {
        margin-bottom: vr(2);
    }

    &__title {
        @include typi('heading2');
    }

    &__image {
        margin-bottom: vr(1);
    }
}

/// Display a mozaic on desktop and wide, when grid layot is supported.
/// @require {Variable} $mozaic-settings
/// @require {Placeholder} %mozaic-desktop
/// @require {Placeholder} %mozaic-wide
/// @require {Function} font-weight
/// @require {Function} vr
/// @require {Mixin} mq
/// @require {Mixin} position
/// @require {Mixin} typi
@supports (display: grid) {
    $caption-animation-opacity: 750ms;
    $caption-animation-transform: 250ms;
    $caption-padding-h: 1rem;
    $caption-padding-v: 1rem;
    $caption-color: rgb(255, 255, 255);
    $caption-text-shadow: rgba(0, 0, 0, 0.6);
    $caption-background-top: rgba(0, 0, 0, 0.6);
    $caption-background-bottom: rgba(0, 0, 0, 0.4);

    @each $breakpoint, $grid-settings in $mozaic-settings {
        @include mq($from: $breakpoint) {

            .oe-mozaic {
                $root: &;

                display: grid;
                grid-template-columns: map-get($grid-settings, template-columns);
                grid-column-gap: map-get($grid-settings, column-gap);

                // Grid is available but not :hover, display captions under images
                &__item {
                    margin-bottom: vr(0.5);
                }

                &__image {
                    margin-bottom: vr(0.5);
                }

                &__title {
                    @include typi('base');
                    font-weight: font-weight(normal);

                    text-transform: none;
                }

                // :hover is available, display revealing caption
                @media (any-hover: hover) {
                    grid-row-gap: map-get($grid-settings, row-gap);
                    grid-auto-rows: map-get($grid-settings, auto-rows);

                    &__item {
                        position: relative;
                        overflow: hidden;
                        margin-bottom: 0;

                        > a,
                        > a > figure {
                            height: 100%;
                        }

                        &--tall {
                            grid-row: auto / span 2;
                        }

                        &--wide {
                            grid-column: auto / span 2;
                        }

                        &:hover #{$root}__title {
                            opacity: 1;
                            transform: translateY(-100%);
                        }
                    }

                    &__title {
                        @include position(absolute, 100%, 0, auto, 0);
                        opacity: 0;
                        padding: $caption-padding-v $caption-padding-h;
                        background: linear-gradient(to bottom, $caption-background-top, $caption-background-bottom);
                        color: $caption-color;
                        text-shadow: 0 0 10px $caption-text-shadow;

                        transition:
                            opacity $caption-animation-opacity ease-out,
                            transform $caption-animation-transform ease-out;
                        will-change: opacity, transform;
                    }

                    &__image {
                        height: 100%;
                        padding-top: 0 !important;
                        margin-bottom: 0;
                    }
                }
            }
        }
    }
}
